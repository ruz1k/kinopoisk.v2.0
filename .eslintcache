[{"C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\index.js":"1","C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\app\\app.js":"2","C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\route\\route.js":"3","C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\header\\header.js":"4","C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\pages\\index.js":"5","C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\pages\\film-detail\\film-detail.js":"6","C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\pages\\film-list\\film-list.js":"7"},{"size":564,"mtime":1611747471319,"results":"8","hashOfConfig":"9"},{"size":235,"mtime":1611816715446,"results":"10","hashOfConfig":"9"},{"size":352,"mtime":1611747471317,"results":"11","hashOfConfig":"9"},{"size":547,"mtime":1611747471313,"results":"12","hashOfConfig":"9"},{"size":146,"mtime":1611747471316,"results":"13","hashOfConfig":"9"},{"size":2017,"mtime":1611828692269,"results":"14","hashOfConfig":"9"},{"size":13291,"mtime":1611828268146,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"14q9liy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\index.js",[],["32","33"],"C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\app\\app.js",[],"C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\route\\route.js",[],"C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\header\\header.js",[],"C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\pages\\index.js",[],"C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\pages\\film-detail\\film-detail.js",["34","35"],"C:\\Users\\Mars\\PhpstormProjects\\react-app\\src\\components\\pages\\film-list\\film-list.js",["36","37","38"],"import React, {Component} from 'react'\r\nimport axios from \"axios\";\r\nimport {List, Card, Image, Spin, Dropdown, Menu, message } from \"antd\";\r\nimport \"./film-list.sass\"\r\nimport {Link} from \"react-router-dom\";\r\nimport arrow from '../../../img/markup_static_img_svg_collapse-down-white.svg'\r\n\r\nclass FilmList extends Component {\r\n    state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        list: [],\r\n        dataGenres: [],\r\n    }\r\n\r\n    fetchData() {\r\n        axios(\"https://api.themoviedb.org/3/discover/movie?api_key=32adee17c164b555fa727f7406e2fe07&language=en-US&include_adult=false&include_video=false\")\r\n            .then(res => res)\r\n            .then(\r\n                (data) => {\r\n                    this.setState(state => {\r\n                        const dataWithFavorite = data.data.results.map((item) => {\r\n                            return {\r\n                                ...item,\r\n                                favorite: false\r\n                            }\r\n                        })\r\n                        return {\r\n                            list: [...dataWithFavorite],\r\n                            isLoaded: true,\r\n                            dataGenres: data.data.results\r\n                        };\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n    render() {\r\n        const {isLoaded, list} = this.state\r\n        /// Удаление и добавление в избранное и из избранного\r\n        const deleteOnFavorite = (dataFav) => {\r\n            dataFav.favorite = false\r\n            message.error(`Film deleted on favorite`);\r\n            this.setState({\r\n                list\r\n            })\r\n        }\r\n        const addToFavorite = (dataFav) => {\r\n            dataFav.favorite = true\r\n            message.success(`Film added to favorite`);\r\n            this.setState({\r\n                list\r\n            })\r\n        }\r\n        /// Очистка фильтров и сортировки\r\n        const resetList = () => {\r\n            this.fetchData()\r\n        }\r\n        /// Сортировка по популярности\r\n        const listSortByPopularity = () => {\r\n            const sorted = list.sort((a, b) => (a.popularity > b.popularity) ? -1 : 1)\r\n            this.setState({\r\n                list: sorted\r\n            })\r\n            const active = document.querySelectorAll('.ant-dropdown-menu li')\r\n            for (let i = 0; active.length > i; i++) {\r\n                active[i].classList.add('active')\r\n            }\r\n        }\r\n        /// Сортировка по Рейтингу\r\n        const listSortByRating = () => {\r\n            const sorted = list.sort((a, b) => (a.vote_average > b.vote_average) ? -1 : 1)\r\n            this.setState({\r\n                list: sorted\r\n            })\r\n        }\r\n        /// Сортировка по Дате\r\n        const listSortByDate = () => {\r\n            const sorted = list.sort((a, b) => (a.release_date > b.release_date) ? -1 : 1)\r\n            this.setState({\r\n                list: sorted\r\n            })\r\n        }\r\n        /// Фильтр жанров\r\n        const filterGenres = (genre_id) => {\r\n            const {dataGenres} = this.state\r\n            const sortedGenres = dataGenres.filter(item => item.genre_ids[0] === genre_id)\r\n            this.setState({\r\n                list: sortedGenres\r\n            })\r\n        }\r\n        /// Dropdown меню\r\n        const dropDownSort = (\r\n            <Menu theme={\"dark\"}>\r\n                <Menu.Item>\r\n                    <button onClick={() => resetList()} className='sort-btn reset' type=\"primary\">Reset\r\n                    </button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"0\">\r\n                    <button onClick={() => listSortByRating()} className='sort-btn' type=\"primary\">Sort By Rating\r\n                    </button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"1\">\r\n                    <button onClick={() => listSortByDate()} className='sort-btn' type=\"primary\">Sort By Date</button>\r\n                </Menu.Item>\r\n                <Menu.Item key='2'>\r\n                    <button onClick={() => listSortByPopularity()} className='sort-btn' type=\"primary\">Sort By\r\n                        Popularity\r\n                    </button>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        const filterSort = (\r\n            <Menu theme={\"dark\"}>\r\n                <Menu.Item>\r\n                    <button onClick={() => resetList()} className='sort-btn reset' type=\"primary\">Reset</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"0\">\r\n                    <button onClick={() => filterGenres(28)} className='sort-btn' type=\"primary\">Action</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"1\">\r\n                    <button onClick={() => filterGenres(12)} className='sort-btn' type=\"primary\">Adventure</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                    <button onClick={() => filterGenres(16)} className='sort-btn' type=\"primary\">Animation</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\">\r\n                    <button onClick={() => filterGenres(35)} className='sort-btn' type=\"primary\">Comedy</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"4\">\r\n                    <button onClick={() => filterGenres(80)} className='sort-btn' type=\"primary\">Crime</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"5\">\r\n                    <button onClick={() => filterGenres(99)} className='sort-btn' type=\"primary\">Documentary</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"6\">\r\n                    <button onClick={() => filterGenres(18)} className='sort-btn' type=\"primary\">Drama</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"7\">\r\n                    <button onClick={() => filterGenres(10751)} className='sort-btn' type=\"primary\">Family</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"8\">\r\n                    <button onClick={() => filterGenres(14)} className='sort-btn' type=\"primary\">Fantasy</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"9\">\r\n                    <button onClick={() => filterGenres(36)} className='sort-btn' type=\"primary\">History</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"10\">\r\n                    <button onClick={() => filterGenres(27)} className='sort-btn' type=\"primary\">Horror</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"11\">\r\n                    <button onClick={() => filterGenres(10402)} className='sort-btn' type=\"primary\">Music</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"12\">\r\n                    <button onClick={() => filterGenres(9648)} className='sort-btn' type=\"primary\">Mystery</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"13\">\r\n                    <button onClick={() => filterGenres(10749)} className='sort-btn' type=\"primary\">Romance</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"14\">\r\n                    <button onClick={() => filterGenres(878)} className='sort-btn' type=\"primary\">Science Fiction\r\n                    </button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"15\">\r\n                    <button onClick={() => filterGenres(10770)} className='sort-btn' type=\"primary\">TV Movie</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"16\">\r\n                    <button onClick={() => filterGenres(53)} className='sort-btn' type=\"primary\">Thriller</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"17\">\r\n                    <button onClick={() => filterGenres(10752)} className='sort-btn' type=\"primary\">War</button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"18\">\r\n                    <button onClick={() => filterGenres(37)} className='sort-btn' type=\"primary\">Western</button>\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n        return (\r\n            <Spin spinning={!isLoaded}>\r\n                <div className='container'>\r\n                    <div className='sort'>\r\n                        <Dropdown overlay={dropDownSort} trigger={['click']}>\r\n                            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                <span>\r\n                                    Sort\r\n                                <img alt='' src={arrow}/>\r\n                                </span>\r\n                            </a>\r\n                        </Dropdown>\r\n                        <Dropdown overlay={filterSort} trigger={['click']}>\r\n                            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                <span>Filter Genres\r\n                                <img alt='' src={arrow}/></span>\r\n                            </a>\r\n                        </Dropdown>\r\n                    </div>\r\n                    <List\r\n                        grid={{\r\n                            gutter: 16,\r\n                            xs: 1,\r\n                            sm: 3,\r\n                            md: 3,\r\n                            lg: 3,\r\n                            xl: 3,\r\n                            xxl: 3,\r\n                        }}\r\n                        pagination={{\r\n                            defaultPageSize: 9,\r\n                            pageSizeOptions: [20, 30, 60],\r\n                            size: \"small\",\r\n                        }}\r\n                        dataSource={list}\r\n                        renderItem={item => {\r\n                            return (\r\n                                <List.Item>\r\n                                    <Link to={{\r\n                                        pathname: `/Film/${item.id}`,\r\n                                        detail: item\r\n                                    }}\r\n                                    >\r\n                                        <Card bordered={false}>\r\n                                            <Image\r\n                                                src={\"https://image.tmdb.org/t/p/original/\" + `${item.poster_path}`}\r\n                                            />\r\n                                            <p>{item.title}</p>\r\n                                            <span\r\n                                                className={`rating ${item.vote_average >= 7 ? \"good-film\" : item.vote_average < 5 ? \"bad-film\" : \"medium-film\"} `}>{item.vote_average}</span>\r\n                                            <Genres ids={item.genre_ids[0]}/>\r\n                                            <span>, {item.release_date.substr(0, 4)}</span>\r\n                                        </Card>\r\n                                    </Link>\r\n                                    {item.favorite === true ? <button onClick={() => deleteOnFavorite(item)} className='want-to-watch true'>Delete on Favorite</button>\r\n                                        : <button onClick={() => addToFavorite(item)} className='want-to-watch false'>Add to Favorite</button>}\r\n                                </List.Item>\r\n                            )\r\n                        }}\r\n                    />\r\n                </div>\r\n            </Spin>\r\n        )\r\n    }\r\n}\r\n\r\nconst Genres = (props) => {\r\n    /// В данной функции я вывожу жанры\r\n    /// Номера жанров я взял с данного API\r\n    // https://api.themoviedb.org/3/genre/movie/list?api_key=32adee17c164b555fa727f7406e2fe07&language=en-US\r\n    const {ids} = props\r\n    switch (ids) {\r\n        case 28:\r\n            return <span>Action</span>\r\n        case 12:\r\n            return <span>Adventure</span>\r\n        case 16:\r\n            return <span>Animation</span>\r\n        case 35:\r\n            return <span>Comedy</span>\r\n        case 80:\r\n            return <span>Crime</span>\r\n        case 99:\r\n            return <span>Documentary</span>\r\n        case 18:\r\n            return <span>Drama</span>\r\n        case 10751:\r\n            return <span>Family</span>\r\n        case 14:\r\n            return <span>Fantasy</span>\r\n        case 36:\r\n            return <span>History</span>\r\n        case 27:\r\n            return <span>Horror</span>\r\n        case 10402:\r\n            return <span>Music</span>\r\n        case 9648:\r\n            return <span>Mystery</span>\r\n        case 10749:\r\n            return <span>Romance</span>\r\n        case 878:\r\n            return <span>Science Fiction</span>\r\n        case 10770:\r\n            return <span>TV Movie</span>\r\n        case 53:\r\n            return <span>Thriller</span>\r\n        case 10752:\r\n            return <span>War</span>\r\n        case 37:\r\n            return <span>Western</span>\r\n        default:\r\n            return <span></span>\r\n    }\r\n}\r\n\r\nexport {\r\n    FilmList,\r\n    Genres\r\n};",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":9,"column":56,"nodeType":"45","messageId":"46","endLine":9,"endColumn":57},{"ruleId":"43","severity":1,"message":"44","line":25,"column":88,"nodeType":"45","messageId":"46","endLine":25,"endColumn":89},{"ruleId":"47","severity":1,"message":"48","line":193,"column":29,"nodeType":"49","endLine":193,"endColumn":96},{"ruleId":"47","severity":1,"message":"48","line":201,"column":29,"nodeType":"49","endLine":201,"endColumn":96},{"ruleId":"43","severity":1,"message":"44","line":233,"column":93,"nodeType":"45","messageId":"46","endLine":233,"endColumn":94},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]